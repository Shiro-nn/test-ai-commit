name: 'test'

on:
  push:

jobs:
  validate-commit-message:
    runs-on: ubuntu-latest
    outputs:
      is_invalid_message: ${{ steps.check_message.outputs.is_invalid }}
    steps:
      - name: Check commit message format
        id: check_message
        uses: actions/github-script@v7
        with:
          script: |
            const commitMessage = context.payload.head_commit.message;
            // Regex для проверки формата: type(scope?): message
            // Пример: fix(core): resolve bug
            // Пример: feat: add new feature
            // Пример: chore(deps): update dependencies
            const regex = /^\w+(\(\w+\))?:\s+.+$/; // Ваше регулярное выражение

            if (regex.test(commitMessage)) {
              console.log('Commit message IS VALID:', commitMessage);
              core.setOutput('is_invalid', 'false');
            } else {
              console.log('Commit message IS INVALID:', commitMessage);
              core.setOutput('is_invalid', 'true');
            }
          result-encoding: string # Важно для правильной передачи boolean как строки
          
  test:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    needs: validate-commit-message
    if: needs.validate-commit-message.outputs.is_invalid_message == 'true'
    permissions: write-all
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI Code Reviewer
        uses: Shiro-nn/ai-code-reviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.AI_API_KEY }}
          OPENAI_API_ENDPOINT: https://integrate.api.nvidia.com/v1
          OPENAI_API_MODEL: nvidia/llama-3.3-nemotron-super-49b-v1
          OCO_PROMPT_MODULE: conventional-commit
